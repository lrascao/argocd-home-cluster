apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: prometheus
  namespace: monitoring
data:
  prometheus.yaml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: kubernetes
        kubernetes_sd_configs:
        - api_server: 'https://kubernetes.default'
          role: pod
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

    remote_write:
    - url: http://influxdb:8086/api/v1/prom/write?db=prometheus
      remote_timeout: 30s
      queue_config:
        capacity: 500
        max_shards: 1000
        min_shards: 1
        max_samples_per_send: 100
        batch_send_deadline: 5s
        min_backoff: 30ms
        max_backoff: 100ms
    remote_read:
    - url: http://influxdb:8086/api/v1/prom/read?db=prometheus
      remote_timeout: 5m
      read_recent: true    
